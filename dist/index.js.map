{"version":3,"file":"index.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../index.js"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = (function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar iteratorSymbol = Symbol.iterator;\n\t\tif (iteratorSymbol && (iteratorSymbol in target)) {\n\t\t\tvar iterator = target[iteratorSymbol](), step, pact, reject;\n\t\t\tfunction _cycle(result) {\n\t\t\t\ttry {\n\t\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pact) {\n\t\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpact = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(pact || (pact = new Pact()), 2, e);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_cycle();\n\t\t\tif (iterator.return) {\n\t\t\t\tvar _fixup = function(value) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\t\titerator.return();\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t\tif (pact && pact.then) {\n\t\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t_fixup();\n\t\t\t}\n\t\t\treturn pact;\n\t\t}\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"value is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof Symbol !== \"undefined\") {\n\t\tvar asyncIteratorSymbol = Symbol.asyncIterator;\n\t\tif (asyncIteratorSymbol && (asyncIteratorSymbol in target)) {\n\t\t\tvar pact = new _Pact();\n\t\t\tvar iterator = target[asyncIteratorSymbol]();\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\treturn pact;\n\t\t\tfunction _resumeAfterBody(result) {\n\t\t\t\tif (check && !check()) {\n\t\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t\t}\n\t\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t\t}\n\t\t\tfunction _resumeAfterNext(step) {\n\t\t\t\tif (step.done) {\n\t\t\t\t\t_settle(pact, 1);\n\t\t\t\t} else {\n\t\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfunction _reject(error) {\n\t\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t\t}\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, value);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = (function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype[Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))] = function() {\n\t\treturn this;\n\t};\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\t_entry(_this).then(returnValue, function(error) {\n\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","const fs = require('fs')\nconst fse = require('fs-extra')\nconst path = require('path')\nconst {\n  compatCache,\n  parallel,\n  beforeUpload: beforeProcess\n} = require('y-upload-utils')\nconst name = 'upload2cdn'\nconst DEFAULT_SEP = '/'\nconst FILTER_OUT_DIR = [\n  '.idea',\n  '.vscode',\n  '.gitignore',\n  'node_modules',\n  '.DS_Store'\n]\n\n// 1. gather html file\n// 2. gather production file\n// 3. upload all production file\n// 4. find the usage of production file in html file\n// 5. if found, replace\n\nfunction resolve(...input) {\n  return path.resolve(...input)\n}\n\nfunction normalize(input, sep = DEFAULT_SEP) {\n  const _input = path.normalize(input)\n  return _input.split(path.sep).join(sep)\n}\n\nfunction isFilterOutDir(input) {\n  return FILTER_OUT_DIR.includes(input)\n}\n\nfunction generateLog(name) {\n  return function log(input, mode = 'log') {\n    console[mode](`[${name}]: `, input)\n  }\n}\n\nconst log = generateLog(name)\n\nconst read = location => fs.readFileSync(location, 'utf-8')\n\nconst write = location => content => fs.writeFileSync(location, content)\n\n/**\n * produce RegExp to match local path\n * @param {string} localPath\n * @param {string} fromPath\n * @param {boolean=} loose\n * @return {RegExp}\n */\nfunction generateLocalPathReg(localPath, fromPath, loose = false) {\n  const relativePath = path.relative(fromPath, localPath)\n  const normalRelPath = normalize(relativePath)\n  const pathArr = normalRelPath.split(DEFAULT_SEP)\n  const char = loose ? '?' : ''\n  // the file must be matched exactly\n  const regStr =\n    `\\\\.?\\\\/?` +\n    pathArr\n      .map(item => {\n        if (item === '..') {\n          return `\\\\.${char}\\\\.${char}`\n        }\n        return item.replace(/\\./g, `\\\\.${char}`)\n      })\n      .join(`\\\\${DEFAULT_SEP}`)\n  return new RegExp(regStr, 'g')\n}\n\n/**\n * find file usage\n * 1. make sure the range: srcPath\n * 2. provide inline path to search and to replace with: localCdnPair\n * @param {string} srcPath\n * @param {string=} distPath\n * @param {function=} shouldReplace\n * @param {boolean=} loose\n * @return {function}\n */\nfunction simpleReplace(\n  srcPath,\n  distPath = srcPath,\n  shouldReplace = () => true,\n  loose = false\n) {\n  const srcFile = read(srcPath)\n  const srcDir = path.resolve(srcPath, '..')\n\n  return function savePair(localCdnPair) {\n    const ret = localCdnPair.reduce((last, [local, cdn]) => {\n      const localPath = normalize(local)\n      const cdnPath = cdn\n      const localPathReg = generateLocalPathReg(\n        localPath,\n        normalize(srcDir),\n        loose\n      )\n      last = last.replace(localPathReg, (match, ...args) => {\n        // given [offset - 20, offset + match.length + 20]\n        // decide whether to replace the local path with cdn url\n        const shift = 20\n        const [offset, str] = args.slice(-2)\n        const sliceStart = Math.max(0, offset - shift)\n        const sliceEnd = Math.min(last.length, offset + match.length + shift)\n        if (shouldReplace(str.slice(sliceStart, sliceEnd), localPath)) {\n          return cdnPath\n        }\n        return match\n      })\n      return last\n    }, srcFile)\n    fse.ensureFileSync(distPath)\n    write(distPath)(ret)\n  }\n}\n\n/**\n * gather specific file type within directory provided\n * 1. provide range to search: src\n * 2. provide the type of file to search: type\n * @param {string} src: directory to search\n * @return {function}\n */\nfunction gatherFileIn(src) {\n  return function gatherFileType(type) {\n    return fs.readdirSync(src).reduce((last, file) => {\n      const filePath = resolve(src, file)\n      if (isFile(filePath)) {\n        path.extname(file) === `.${type}` && last.push(normalize(filePath))\n      } else if (isFilterOutDir(file)) {\n        // do nothing\n      } else if (isDir(filePath)) {\n        last = last.concat(gatherFileIn(filePath)(type))\n      }\n      return last\n    }, [])\n  }\n}\n\nfunction isFile(input) {\n  return fs.statSync(input).isFile()\n}\n\nfunction isDir(input) {\n  return fs.statSync(input).isDirectory()\n}\n\nfunction isType(type) {\n  return function enterFile(file) {\n    return isFile(file) && path.extname(file) === '.' + type\n  }\n}\n\n/**\n * give the power of playing with cdn url\n * @param {*[]} entries\n * @param {function} cb\n * @returns {[string, string][] | void}\n */\nfunction processCdnUrl(entries, cb) {\n  if (typeof cb !== 'function') log(`urlCb is not function`, 'error')\n  return entries.map(([local, cdn]) => {\n    // pair[1] should be cdn url\n    const useableCdn = cb(cdn)\n    if (typeof useableCdn !== 'string')\n      log(`the return result of urlCb is not string`, 'error')\n    return [local, useableCdn]\n  })\n}\n\nfunction mapSrcToDist(srcFilePath, srcRoot, distRoot) {\n  const [file, src, dist] = [srcFilePath, srcRoot, distRoot].map(p =>\n    normalize(p)\n  )\n  return file.replace(src, dist)\n}\n\nconst imgTypeArr = ['jpg', 'jpeg', 'png', 'gif', 'webp', 'ico', 'mp3', 'mp4']\nconst fontTypeArr = ['woff', 'woff2', 'ttf', 'oft', 'svg', 'eot']\nconst ASSET_TYPE = [...imgTypeArr, ...fontTypeArr, 'js', 'css']\nconst isCss = isType('css')\nconst isJs = isType('js')\n\nfunction isFont(path) {\n  return fontTypeArr.some(type => isType(type)(path))\n}\n\nfunction isImg(path) {\n  return imgTypeArr.some(type => isType(type)(path))\n}\n\n/**\n * collect everything\n * @param {function(string)} gatherFn\n * @param {string[]} typeList\n * @returns {{all: string[], js: string[], css: string[], img: string[], font: string[]}}\n */\nfunction autoGatherFilesInAsset(gatherFn, typeList) {\n  return typeList.reduce(\n    (last, type) => {\n      const files = gatherFn(type)\n      if (!files.length) return last\n      const [location] = files\n      last.all = last.all.concat(files)\n      if (isImg(location)) {\n        last.img = last.img.concat(files)\n      } else if (isCss(location)) {\n        last.css = last.css.concat(files)\n      } else if (isJs(location)) {\n        last.js = last.js.concat(files)\n      } else if (isFont(location)) {\n        last.font = last.font.concat(files)\n      } else {\n        last.extra = last.extra.concat(files)\n      }\n      return last\n    },\n    {\n      all: [],\n      img: [],\n      js: [],\n      font: [],\n      css: [],\n      extra: []\n    }\n  )\n}\n\n/**\n * @typedef {function(string): string} urlCb\n * @typedef {function(string[]): Promise<object>} uploadFn\n * @typedef {(content: string, location: string) => string} preProcess\n * @typedef {(slice: string, localFile: string) => boolean} shouldReplace\n */\n\n/**\n * custom cdn module, need to have an upload API, return a Promise with structured response\n * like {localPath: cdnPath}\n * @param {object} cdn\n * @param {uploadFn} cdn.upload\n * @param {object} option\n * @param {string} option.src\n * @param {string} option.assets\n * @param {string=} option.dist\n * @param {urlCb=} option.urlCb\n * @param {object=} option.passToCdn\n * @param {boolean=} option.enableCache\n * @param {string=} option.cacheLocation\n * @param {function=} option.onFinish\n * @param {function=} option.beforeUpload\n * @param {number=} option.sliceLimit\n * @param {string[]=} option.files\n * @param {preProcess=} option.preProcess\n * @param {shouldReplace=} option.shouldReplace\n * @param {string=} option.extraTypes\n * @param {function=} option.shapeExtra\n * @param {boolean=} option.loose\n */\nasync function upload(cdn, option = {}) {\n  const {\n    src = resolve('src'),\n    dist = src,\n    assets = resolve('src'),\n    resolve: resolveList = ['html'],\n    urlCb = input => input,\n    replaceInJs = true,\n    onFinish = () => {},\n    passToCdn,\n    enableCache = true,\n    cacheLocation,\n    beforeUpload,\n    sliceLimit,\n    files = [],\n    preProcess = input => input,\n    shouldReplace = () => true,\n    extraTypes = [],\n    shapeExtra = input => input,\n    loose = false\n  } = option\n  if (!enableCache && cacheLocation) {\n    log(\n      `WARNING! 'cacheLocation' provided while haven't set 'enableCache' to true`\n    )\n    log(`WARNING! This won't enable cache`)\n  }\n  log('start...')\n  // all assets including js/css/img\n  let assetsFiles = []\n  const ALL_TYPES = [...extraTypes, ...ASSET_TYPE]\n  // if providing files field use files over src\n  if (files.length) {\n    const isFilesValid = files.every(file => path.isAbsolute(file))\n    if (!isFilesValid) {\n      return log(\n        `WARNING! 'files' filed contains non-absolute path! Replace with absolute ones!`\n      )\n    }\n    assetsFiles = autoGatherFilesInAsset(\n      type => files.filter(file => path.extname(file) === `.${type}`),\n      ALL_TYPES\n    )\n  } else {\n    const gatherFileInAssets = gatherFileIn(assets)\n    assetsFiles = autoGatherFilesInAsset(gatherFileInAssets, ALL_TYPES)\n  }\n\n  // closure with passToCdn\n  const rawCdn = {\n    upload(files) {\n      return cdn.upload(files, passToCdn)\n    }\n  }\n\n  // wrap with parallel\n  const paralleledCdn = parallel(rawCdn, { sliceLimit })\n\n  // wrap with cache\n  const wrappedCdn = enableCache\n    ? compatCache(paralleledCdn, {\n        passToCdn,\n        cacheLocation,\n        beforeUpload\n      })\n    : paralleledCdn\n\n  // wrap with beforeProcess\n  // use beforeUpload properly\n  const useableCdn = beforeProcess(wrappedCdn, beforeUpload)\n\n  const { img, css, js, font, all, extra } = assetsFiles\n\n  // preProcess all files to convert computed path to static path\n  all.forEach(filePath => {\n    const fileContent = read(filePath)\n    const newContent = preProcess(fileContent, filePath)\n    if (fileContent === newContent) {\n      return\n    }\n    write(filePath)(newContent)\n  })\n\n  // upload img/font\n  // find img/font in css\n  // replace css\n  // now css ref to img/font with cdn path\n  // meanwhile upload chunk files to save time\n  log(`uploading img + font ...`)\n  let imgAndFontPairs\n  try {\n    imgAndFontPairs = await useableCdn.upload([...img, ...font])\n  } catch (e) {\n    log('error occurred')\n    log(e, 'error')\n    return\n  }\n\n  // update reference in extra\n  extra.forEach(name => {\n    simpleReplace(name, name, shouldReplace, loose)(\n      processCdnUrl(Object.entries(imgAndFontPairs), urlCb)\n    )\n  })\n\n  // upload extra types of files\n  let extraPairs = {}\n  const uploadExtra = async () => {\n    if (extra.length) {\n      log('uploading extra...')\n      try {\n        extraPairs = await useableCdn.upload(extra)\n      } catch (e) {\n        log('error occurred')\n        log(e, 'error')\n        return\n      }\n    }\n  }\n\n  await uploadExtra()\n\n  // re-organize extra\n  // in case there is dependency among them\n  shapeExtra(extra).forEach(name => {\n    simpleReplace(name, name, shouldReplace, loose)(\n      processCdnUrl(\n        Object.entries({ ...extraPairs, ...imgAndFontPairs }),\n        urlCb\n      )\n    )\n  })\n\n  await uploadExtra()\n\n  // update css + js files with cdn img/font\n  const replaceFiles = replaceInJs\n    ? [...js, ...css, ...extra]\n    : [...css, ...extra]\n  replaceFiles.forEach(name => {\n    simpleReplace(name, name, shouldReplace, loose)(\n      processCdnUrl(\n        Object.entries({ ...extraPairs, ...imgAndFontPairs }),\n        urlCb\n      )\n    )\n  })\n\n  // concat js + css + img\n  log(`uploading js + css`)\n  const adjustedFiles = all\n  const findFileInRoot = gatherFileIn(src)\n  const tplFiles = resolveList.reduce((last, type) => {\n    last = last.concat(findFileInRoot(type))\n    return last\n  }, [])\n  let jsCssImgPair\n  try {\n    jsCssImgPair = await useableCdn.upload(adjustedFiles)\n  } catch (e) {\n    log('error occurred')\n    log(e, 'error')\n    return\n  }\n  const localCdnPair = Object.entries(jsCssImgPair)\n  tplFiles.forEach(filePath => {\n    simpleReplace(\n      filePath,\n      mapSrcToDist(filePath, src, dist),\n      shouldReplace,\n      loose\n    )(processCdnUrl(localCdnPair, urlCb))\n  })\n  // run onFinish if it is a valid function\n  onFinish()\n  log(`all done`)\n}\n\nmodule.exports = {\n  upload,\n  gatherFileIn,\n  autoGatherFilesInAsset\n}\n"],"names":["upload","cdn","option","extra","forEach","name","simpleReplace","shouldReplace","loose","processCdnUrl","Object","entries","imgAndFontPairs","urlCb","extraPairs","uploadExtra","length","log","useableCdn","e","shapeExtra","localCdnPair","jsCssImgPair","tplFiles","filePath","mapSrcToDist","src","dist","onFinish","replaceFiles","replaceInJs","js","css","adjustedFiles","all","findFileInRoot","gatherFileIn","resolveList","reduce","last","type","concat","resolve","input","passToCdn","cacheLocation","beforeUpload","sliceLimit","enableCache","assetsFiles","ALL_TYPES","extraTypes","ASSET_TYPE","files","isFilesValid","every","file","path","isAbsolute","autoGatherFilesInAsset","filter","extname","gatherFileInAssets","assets","rawCdn","paralleledCdn","parallel","wrappedCdn","compatCache","beforeProcess","font","fileContent","read","newContent","preProcess","write","const","fs","require","fse","DEFAULT_SEP","FILTER_OUT_DIR","normalize","sep","_input","split","join","isFilterOutDir","includes","generateLog","mode","console","location","readFileSync","content","writeFileSync","generateLocalPathReg","localPath","fromPath","relativePath","relative","normalRelPath","pathArr","char","regStr","map","item","replace","RegExp","srcPath","distPath","srcFile","srcDir","savePair","ret","local","cdnPath","localPathReg","match","shift","args","slice","offset","str","sliceStart","Math","max","sliceEnd","min","ensureFileSync","gatherFileType","readdirSync","isFile","push","isDir","statSync","isDirectory","isType","enterFile","cb","srcFilePath","srcRoot","distRoot","p","imgTypeArr","fontTypeArr","isCss","isJs","isFont","some","isImg","gatherFn","typeList","img","module","exports"],"mappings":"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"}